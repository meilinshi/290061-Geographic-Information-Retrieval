Traceback (most recent call last):
  File "/home/meilin/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/meilin/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/meilin/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/meilin/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/meilin/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/meilin/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/meilin/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/meilin/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df_countries = gpd.read_file('ne_10m_admin_0_countries/ne_10m_admin_0_countries.shp') ## read shapefile

## show the first several records
## the default number is 5
## try to comment this line of code, and uncomment one of the rest and run the cell again
df_countries.head()

# df_countries.head(1) ## try to uncomment and output the first record
# df_countries.tail() ## try to uncomment and output the last five records
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mDataSourceError[0m                           Traceback (most recent call last)
Cell [0;32mIn[2], line 1[0m
[0;32m----> 1[0m df_countries [38;5;241m=[39m gpd[38;5;241m.[39mread_file([38;5;124m'[39m[38;5;124mne_10m_admin_0_countries/ne_10m_admin_0_countries.shp[39m[38;5;124m'[39m) [38;5;66;03m## read shapefile[39;00m
[1;32m      3[0m [38;5;66;03m## show the first several records[39;00m
[1;32m      4[0m [38;5;66;03m## the default number is 5[39;00m
[1;32m      5[0m [38;5;66;03m## try to comment this line of code, and uncomment one of the rest and run the cell again[39;00m
[1;32m      6[0m df_countries[38;5;241m.[39mhead()

File [0;32m~/anaconda3/lib/python3.11/site-packages/geopandas/io/file.py:294[0m, in [0;36m_read_file[0;34m(filename, bbox, mask, columns, rows, engine, **kwargs)[0m
[1;32m    291[0m             from_bytes [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m    293[0m [38;5;28;01mif[39;00m engine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mpyogrio[39m[38;5;124m"[39m:
[0;32m--> 294[0m     [38;5;28;01mreturn[39;00m _read_file_pyogrio(
[1;32m    295[0m         filename, bbox[38;5;241m=[39mbbox, mask[38;5;241m=[39mmask, columns[38;5;241m=[39mcolumns, rows[38;5;241m=[39mrows, [38;5;241m*[39m[38;5;241m*[39mkwargs
[1;32m    296[0m     )
[1;32m    298[0m [38;5;28;01melif[39;00m engine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mfiona[39m[38;5;124m"[39m:
[1;32m    299[0m     [38;5;28;01mif[39;00m pd[38;5;241m.[39mapi[38;5;241m.[39mtypes[38;5;241m.[39mis_file_like(filename):

File [0;32m~/anaconda3/lib/python3.11/site-packages/geopandas/io/file.py:547[0m, in [0;36m_read_file_pyogrio[0;34m(path_or_bytes, bbox, mask, rows, **kwargs)[0m
[1;32m    538[0m     warnings[38;5;241m.[39mwarn(
[1;32m    539[0m         [38;5;124m"[39m[38;5;124mThe [39m[38;5;124m'[39m[38;5;124minclude_fields[39m[38;5;124m'[39m[38;5;124m and [39m[38;5;124m'[39m[38;5;124mignore_fields[39m[38;5;124m'[39m[38;5;124m keywords are deprecated, and [39m[38;5;124m"[39m
[1;32m    540[0m         [38;5;124m"[39m[38;5;124mwill be removed in a future release. You can use the [39m[38;5;124m'[39m[38;5;124mcolumns[39m[38;5;124m'[39m[38;5;124m keyword [39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m    543[0m         stacklevel[38;5;241m=[39m[38;5;241m3[39m,
[1;32m    544[0m     )
[1;32m    545[0m     kwargs[[38;5;124m"[39m[38;5;124mcolumns[39m[38;5;124m"[39m] [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124minclude_fields[39m[38;5;124m"[39m)
[0;32m--> 547[0m [38;5;28;01mreturn[39;00m pyogrio[38;5;241m.[39mread_dataframe(path_or_bytes, bbox[38;5;241m=[39mbbox, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m~/anaconda3/lib/python3.11/site-packages/pyogrio/geopandas.py:265[0m, in [0;36mread_dataframe[0;34m(path_or_buffer, layer, encoding, columns, read_geometry, force_2d, skip_features, max_features, where, bbox, mask, fids, sql, sql_dialect, fid_as_index, use_arrow, on_invalid, arrow_to_pandas_kwargs, **kwargs)[0m
[1;32m    260[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m use_arrow:
[1;32m    261[0m     [38;5;66;03m# For arrow, datetimes are read as is.[39;00m
[1;32m    262[0m     [38;5;66;03m# For numpy IO, datetimes are read as string values to preserve timezone info[39;00m
[1;32m    263[0m     [38;5;66;03m# as numpy does not directly support timezones.[39;00m
[1;32m    264[0m     kwargs[[38;5;124m"[39m[38;5;124mdatetime_as_string[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m--> 265[0m result [38;5;241m=[39m read_func(
[1;32m    266[0m     path_or_buffer,
[1;32m    267[0m     layer[38;5;241m=[39mlayer,
[1;32m    268[0m     encoding[38;5;241m=[39mencoding,
[1;32m    269[0m     columns[38;5;241m=[39mcolumns,
[1;32m    270[0m     read_geometry[38;5;241m=[39mread_geometry,
[1;32m    271[0m     force_2d[38;5;241m=[39mgdal_force_2d,
[1;32m    272[0m     skip_features[38;5;241m=[39mskip_features,
[1;32m    273[0m     max_features[38;5;241m=[39mmax_features,
[1;32m    274[0m     where[38;5;241m=[39mwhere,
[1;32m    275[0m     bbox[38;5;241m=[39mbbox,
[1;32m    276[0m     mask[38;5;241m=[39mmask,
[1;32m    277[0m     fids[38;5;241m=[39mfids,
[1;32m    278[0m     sql[38;5;241m=[39msql,
[1;32m    279[0m     sql_dialect[38;5;241m=[39msql_dialect,
[1;32m    280[0m     return_fids[38;5;241m=[39mfid_as_index,
[1;32m    281[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m    282[0m )
[1;32m    284[0m [38;5;28;01mif[39;00m use_arrow:
[1;32m    285[0m     meta, table [38;5;241m=[39m result

File [0;32m~/anaconda3/lib/python3.11/site-packages/pyogrio/raw.py:198[0m, in [0;36mread[0;34m(path_or_buffer, layer, encoding, columns, read_geometry, force_2d, skip_features, max_features, where, bbox, mask, fids, sql, sql_dialect, return_fids, datetime_as_string, **kwargs)[0m
[1;32m     59[0m [38;5;250m[39m[38;5;124;03m"""Read OGR data source into numpy arrays.[39;00m
[1;32m     60[0m 
[1;32m     61[0m [38;5;124;03mIMPORTANT: non-linear geometry types (e.g., MultiSurface) are converted[39;00m
[0;32m   (...)[0m
[1;32m    194[0m 
[1;32m    195[0m [38;5;124;03m"""[39;00m
[1;32m    196[0m dataset_kwargs [38;5;241m=[39m _preprocess_options_key_value(kwargs) [38;5;28;01mif[39;00m kwargs [38;5;28;01melse[39;00m {}
[0;32m--> 198[0m [38;5;28;01mreturn[39;00m ogr_read(
[1;32m    199[0m     get_vsi_path_or_buffer(path_or_buffer),
[1;32m    200[0m     layer[38;5;241m=[39mlayer,
[1;32m    201[0m     encoding[38;5;241m=[39mencoding,
[1;32m    202[0m     columns[38;5;241m=[39mcolumns,
[1;32m    203[0m     read_geometry[38;5;241m=[39mread_geometry,
[1;32m    204[0m     force_2d[38;5;241m=[39mforce_2d,
[1;32m    205[0m     skip_features[38;5;241m=[39mskip_features,
[1;32m    206[0m     max_features[38;5;241m=[39mmax_features [38;5;129;01mor[39;00m [38;5;241m0[39m,
[1;32m    207[0m     where[38;5;241m=[39mwhere,
[1;32m    208[0m     bbox[38;5;241m=[39mbbox,
[1;32m    209[0m     mask[38;5;241m=[39m_mask_to_wkb(mask),
[1;32m    210[0m     fids[38;5;241m=[39mfids,
[1;32m    211[0m     sql[38;5;241m=[39msql,
[1;32m    212[0m     sql_dialect[38;5;241m=[39msql_dialect,
[1;32m    213[0m     return_fids[38;5;241m=[39mreturn_fids,
[1;32m    214[0m     dataset_kwargs[38;5;241m=[39mdataset_kwargs,
[1;32m    215[0m     datetime_as_string[38;5;241m=[39mdatetime_as_string,
[1;32m    216[0m )

File [0;32mpyogrio/_io.pyx:1240[0m, in [0;36mpyogrio._io.ogr_read[0;34m()[0m

File [0;32mpyogrio/_io.pyx:220[0m, in [0;36mpyogrio._io.ogr_open[0;34m()[0m

[0;31mDataSourceError[0m: ne_10m_admin_0_countries/ne_10m_admin_0_countries.shp: No such file or directory
DataSourceError: ne_10m_admin_0_countries/ne_10m_admin_0_countries.shp: No such file or directory

